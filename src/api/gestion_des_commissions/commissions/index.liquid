---
layout: layouts/sidebar.liquid
title: My Posts
pagination:
  data: openapi.operationsTags
  alias: tag
  size: 1
permalink: "api/{{ pagination.items[0] | slugify }}/index.html"
---

<h1 class="mb-4">
  Points de terminaison d'API REST pour {{ tag }}
</h1>

<hr>

{% # On parcourt tous les chemins de l'API %}
{%- for path in openapi.paths  -%}

  {% # Sur chaque chemin, on récupère les méthodes exposées et les opérations associées %}
  {%- for method in path[1]  -%}

    {% # On vérifie que le tag de la méthode correspond au tag de la page %}
    {% assign pageTag = method[1].tags[0] | replace: ' API', '' | slugify %}
    {% assign operationTag = tag | replace: ' API', '' | slugify %}
    {%- if pageTag != operationTag -%}
      {%- continue -%}
    {%- endif -%}

    <div class="mb-2">

      <div class="row">

        {% # Partie gauche : documentation de l'endpoint %}
        <div class="col-6">

          {% # Affichage de l'operationid, utile pour les développeurs %}
          <div class="float-end">
            <span class="badge text-bg-secondary">{{ method[1].operationId }}</span>
          </div>

          {% # Informations générales de l'endpoint %}
          <h2 class="mb-4">{{ method[1].summary }}</h2>
          <div class="mb-4">{{ method[1].description | markdownify }}</div>

          {% # On vérifie si l'en-tête Metarisc-Org-Id est requis # %}
          {% assign metariscOrgHeader = method[1].parameters | where: 'in', 'header' | where: 'name', 'Metarisc-Org-Id' | size %}
          {% if metariscOrgHeader > 0 %}
          <p class="mb-4">
            Cet endpoint nécessite l'en-tête <code class="fw-bold">Metarisc-Org-Id</code> pour identifier l'organisation faisant l'appel.
            Le résultat de l'appel sera donc spécifique à cette organisation.
          </p>
          {% endif %}

          {% # Paramètres de la requête %}
          {% assign parameters_query = method[1].parameters | parameters -%}
          {% assign parameters_query_size = parameters_query | size -%}
          {%- if parameters_query_size > 0 -%}
            <h3 class="fs-5 pb-1 mb-1 border-bottom">Paramètres</h3>
            {%- for parameter in parameters_query -%}
              {% assign parameter_schema = parameter.schema %}
              {% # Si le paramètre est multiple, on l'indique mais on n'affiche qu'un schéma sur les deux %}
              {% if parameter['x-extension-metarisc-param-multiple'] %}
                {% render 'openapi/schema', schema: parameter_schema['oneOf'][0], title: parameter.name, description: parameter.description, multiple: true, required: parameter.required %}
              {% else %}
                {% render 'openapi/schema', schema: parameter_schema, title: parameter.name, description: parameter.description, required: parameter.required %}
              {% endif %}
            {%- endfor -%}
          {%- endif -%}

          {% # Schéma du corps de la requête %}
          {%- if method[1].requestBody != null -%}
            <h3 class="fs-5 pb-1 mb-1 border-bottom">Paramètres du corps de la requête</h3>
            {% assign request_schema = method[1].requestBody.content["application/json"].schema %}
            {%- if request_schema.type == "array" -%}
              {% render 'openapi/schema', schema: request_schema, expandArray: true %}
            {%- else -%}
              {% render 'openapi/schema', schema: request_schema %}
            {%- endif -%}
          {%- endif -%}

          {% # Schéma des réponses %}
          <h3 class="fs-5 pb-1 mb-1 border-bottom">Réponses</h3>
          {%- if method[1].responses != null -%}
            {%- for response in method[1].responses  -%}

              {% # On affiche uniquement les 200, 201 ou 204 pour simplifier la lecture de la doc %}
              {%- if response[0] != "200" and response[0] != "201" and response[0] != "204" -%}
                {%- continue -%}
              {%- else -%}
                <p class="mb-2">
                  <strong class="badge text-bg-success">{{ response[0] }}</strong>
                  <span class="text-muted">{{ response[1].description }}</span>
                </p>
              {%- endif -%}

              {%- if response[0] == "200" -%}
      
                {%- if method[1]["x-extension-metarisc-codegen-ispagination"] == null and method[1]["x-extension-metarisc-codegen-islist"] == null -%}
                  <p>Retourne un objet contenant les données demandées.</p>
                {%- endif -%}

                {%- if method[1]["x-extension-metarisc-codegen-ispagination"] -%}
                  <p>
                    Retourne un dictionnaire avec une propriété data contenant un tableau d'éléments (en respectant les limites de pagination).
                    Chaque entrée du tableau constitue un objet distinct. Si aucun élément n'est disponible, le tableau résultant sera vide.
                  </p>
                {%- endif -%}

                {%- if method[1]["x-extension-metarisc-codegen-islist"] -%}
                  <p>
                    Retourne un tableau d'éléments. Chaque entrée du tableau constitue un objet distinct. Si aucun élément n'est disponible, le tableau résultant sera vide.
                  </p>
                {%- endif -%}

              {%- elsif response[0] == "204" -%}

                <p>Retourne une réponse vide.</p>

              {%- elsif response[0] == "201" -%}

                <p>Retourne un objet contenant les données de l'élément créé.</p>

              {%- endif -%}

            {%- endfor -%}
          {%- endif -%}

        </div>

        {% # Partie droite : HTTP Rest illustration %}
        <div class="col-6">

          <div class="card text-bg-secondary p-1">
            <p class="m-0">
              <span class="badge bg-info">{{ method[0] | upcase }}</span>
              <span>{{ path[0] }}</span>
            </p>
          </div>

          {%- if method[1].responses != null -%}
              {%- for response in method[1].responses  -%}
                {% # On affiche uniquement les 200, 201 ou 204 pour simplifier la lecture de la doc %}
                {%- if response[0] != "200" and response[0] != "201" and response[0] != "204" -%}
                  {%- continue -%}
                {%- else -%}
                    {%- if response[1].content != null and response[1].content["application/json"].schema != null -%}
                      <div class="card mt-2" style="background-color: rgba(108, 117, 125, 0.2);">
                        <div class="card-header">
                          <strong>Schéma de la réponse</strong>
                        </div>
                        <div class="card-body">
                        {% assign response_schema = response[1].content["application/json"].schema %}
                        {% render 'openapi/schema', schema: response_schema, expandArray: true %}
                        </div>
                      </div>
                    {%- endif -%}
                  {%- continue -%}
                {%- endif -%} 
              {%- endfor -%}
          {%- endif -%}

        </div>
      </div>

    </div>

    <hr>

  {%- endfor -%}

{%- endfor -%}